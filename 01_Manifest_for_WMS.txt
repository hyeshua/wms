@DECL @WMS_VERSION 1.0 %WMS_VERSION @ENC UTF-8 %ENC %DECL

@DOCTYPE manuscript @VERSION 1.0 %VERSION %DOCTYPE

@DOC_VERSION 1.0 %DOC_VERSION 

@MS
> - ---- beginning of the document ---- - <


@T0 Presentation of the (Writing) Markup System %T0

@ABS This file describes the markup system used to format the datafile. %ABS

@T1 What is this (Writing) Markup System? %T1

@P The markup system used to format the datafile is in fact a more general writing markup system since it was designed to facilitate a preparation of manuscripts, drafts, notes and likes. One caveat before continuing: the current version -- i.e. 1.0 -- may turn out to be not powerfull enough since it seems to only support simple case of markup. Nevertheless you may use/define your own elements to fit your needs. You will just need to provide/write a converter accordingly. %P
@P It was primarily designed for my personnal use by you may use it under the licence CC-BY-ND-NC-SA 4.0

@T1 Why another markup system? %T1

@P The first reason is that I wanted a manuscript (especially datafile) edited in plain text format. The reason why I wanted a datafile edited in a plain text (i.e. .txt) format is because it is a basic file format. This feature as two desirable consequences: %P


@P PORTATIVITY:  Texts may be edited and viewed from almost all devices (PC, mobiles, etc.) %P

@P LONG TERM ARCHIVING: One of the challenge for long term archiving is technological inovations. But since .txt is (as far as I know) the most basic file format. You maynot worry about the fact that you data may not be accessible for future programs. Hence, your data will always be available in their original format. %P
  

@T1 Exporting to other file formats %T1

@T2 Exporting to XML, TeX and Toolbox %T2

@P The txt file is supplemented by three scripts that convert it into .tex, .xml and .txt (toolbox project). Run the right converter on your .txt file to get the desired output format. %P
@P The .xml file was generated by this method. See the .xml file line 3. %P

@T2 Exporting to PDF %T2 @LS export %LS

@P PDF files can be produced via regular methods from .tex or .pdf files. But you have provide the correct XML and TeX configuration files (XML style sheet, .sty, .cls, etc.) -- i.e. &_  %P


@T1 Description of the markup system %T1

@T2 Philosophy %T2

@P Like other markup systems, th WMS use the WYSIWYM "What you see is what you mean" philosophy -- i.e. the author only indicates what kind of thing the reader is reading -- just in the spirit of XML. %P 
@P Note: to control for the appearence, you need to set up the .tex file xml stylesheet accordingly. %P
@P The main difference between WMS and XML is that it simplifies the syntax of element labels: they only have prefix and not suffix -- i.e. no ">" 

@T2 Syntax %T2
 
@T3 Formatting of elements' tags %T3

@P The  the markup system is inspired by the syntax of XML -- viz, the writer have to specify where the element starts and where it ends. Thus its syntax relies on formatting of elements tags. Tough, it is intended to be simple so as to permit quick editing. Tags can contain numbers, hyphens and underscores %P
@P Elements tags are written in full caps and prefixed by "@" or "%". "@" is the prefix for beginning tag of elements and "%" is the prefix for ending tag of elements. %P

@T3 Scope of "@" and "%"

@P "@" "%" and all punctuation symbols except hyphens (i.e. "-") and underscores (i.e. "_") end the label of the element. Spaces and carriage return also end labels of elements. %P


@T3 Blank lines %T3

@P Blanck lines don't matter. %P

@T3 Enclosed elements (called "control sequences") and insertion of special caracters %T3

@P Elements surrounded by "@" and "%" are enclosed eleements and usually used to refer to special caracters -- e.g. @BR% stands for "^^M" (Return). Users may design their own "control sequences". For example, you may write @LAM% to refer to the greek letter "lambda". %P
@P 
Another way to insert "special" caracters is to prefix them with the caracter "&". For example, to signal a break (like for verses in poetry) you may use @BR% In this case, the case doesn't matter -- i.e. @BR% means the same thing as &BR or &br. 
%P  

@T3 Document's comments %T3

@P They are essentially used for converters. XML and TeX have stuff that are not processed. Such stuff are called comments. In a WMS document, notes are normally enclosed within "&> - " and " - &<". But one may use the element C(OMMENT). %P

@T3 Note on the structure the document %T3

@P The document starts with elements setting the paramaters of the document. These elements are to be used by converters. The first line of the document contains the declaration of the wms version of and encoding of the document via respectively the elements WMS_VERSION and ENC(ODING). The current version is 1.0 and the preferred encoding is UTF-8. 
These declarations are enclosed within the "Declaration" element whose tag is DEC(L). Next to the initial declarations, the writer must specify the type of document he is writing via DOCTYPE. Within DOCTYPE, writer should specify the version of the document type via VERSION. %P
@P The whole content of the document must be enclosed in a root element. Here "MS" for ReadMe. This is not required for TeX but is crucial for XML. %P

@T3 WMS syntax cheatsheet %T3

@TABLE
@ROWS
&line
@ROW Caracter	&cb	Short definition		&cb	TeX				&cb	XML			%ROW
&line
@ROW @		&cb 	beginning (tag) of an element	&cb 	> - normally - < \begin{...}	&cb	<...>			%ROW
@ROW % 		&cb 	ending (tag) of an element	&cb	> - normally - < \end{...}	&cb 	</...>			%ROW
@ROW > -	&cb 	beginning of a comment		&cb 	\begin{comment}			&cb 	<!--			%ROW
@ROW - <	&cb 	end of a comment 		&cb 	\end{comment} 			&cb 	-->			%ROW
@ROW @...% 	&cb	control sequence		&cb 	\... 				&cb 	<.../> or <...><.../>	%ROW
@ROW & 		&cb 	control sequence 		&cb	\... 				&cb 	<.../> or <...><.../>	%ROW
%ROWS
%TABLE

> - ----- end of the document ----- - <
%MS
